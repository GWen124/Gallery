name: Deploy Gallery to GitHub Pages-GitHub Actions

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: build_output
          key: ${{ runner.os }}-build-${{ hashFiles('**/*.py', 'config.json', 'themes/**', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build Gallery with Custom Generator
        run: |
          echo "开始构建画廊..."
          python build_gallery.py
          echo "构建完成，检查输出目录..."
          ls -la build_output/
          echo "输出目录大小:"
          du -sh build_output/
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Verify build output
        run: |
          echo "验证构建输出..."
          if [ ! -f "build_output/index.html" ]; then
            echo "错误: index.html 不存在"
            exit 1
          fi
          echo "检查文件数量:"
          find build_output -type f | wc -l
          echo "检查大文件 (>50MB):"
          find build_output -type f -size +50M -exec ls -lh {} \;
          echo "检查大文件 (>20MB):"
          find build_output -type f -size +20M -exec ls -lh {} \;
          echo "总大小:"
          du -sh build_output/
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build_output'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
